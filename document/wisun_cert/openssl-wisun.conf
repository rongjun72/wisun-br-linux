#
# Configuration file for generating X.509 certificates for Wi-SUN demo
#
# Wi-SUN certificate requirements from Wi-SUN FAN Technical Profile Specification
# 1. Version: V3
# 2. SerialNumber
# 3. Signature: (inner) SHA256WithECDSA
# 4. Issuer: Subject copied from Issuer's CA certificate
# 5. Validity
#   a. NotBefore: Issuing date and time in UTC (Generalized Time)
#   b. NotAfter: 99991232235959Z (Generalized Time)
# 6. Subject: MAY be <empty> - device identity is contained in SubjectAlternativeName extension
# 7. SubjectPublicKeyInfo: An EC public key (id-ecPublicKey) with a curve type of P-256. See [RFC5480]
# 8. Issuer Unique ID: <empty>
# 9. Subject Unique ID: <empty>
# 10. Extensions
#   a. AuthorityKeyIdentifier - MUST contain only the keyIdentifier field (element [0] of AuthorityKeyIdentifier, see [RFC5280])
#   b. KeyUsage - MUST have digitalSignature bit set, MAY have keyAgreement bit set
#   c. SubjectAlternativeName â€“ MUST contain one and only one alternative name of type OtherName of type id-on-hardwareModule
#   d. ExtendedKeyUsage
#     i. MUST contain the object identifier id-kp-wisun-fan-device
#     ii. MUST contain the object identifier id-kp-clientAuth (defined in [RFC3280])
#     iii. MAY contain other key usages, but those are not specified by this standard
#
# The demo certificates follow these rules except (6) where CN is set in order to
# make it easier to recognize different certificates. In (10c), the hardware serial
# number is fixed and not unique per device.
#

# This definition stops the following lines choking if HOME isn't
# defined.
HOME                    = .
RANDFILE                = $ENV::HOME/.rnd

####################################################################
[ ca ]
default_ca      = wisun_ca              # The default ca section

####################################################################
[ wisun_ca ]
dir             = ./                    # Where everything is kept
certs           = $dir                  # Where the issued certs are kept
crl_dir         = $dir                  # Where the issued crl are kept
database        = $dir/certdb.txt       # database index file.
new_certs_dir   = $dir                  # default place for new certs.

certificate     = $dir/wisun_root_ca_cert.pem   # The CA certificate
serial          = $dir/serial                   # The current serial number
crlnumber       = $dir/crlnumber                # the current crl number must be commented out to leave a V1 CRL
crl             = $dir/crl.pem                  # The current CRL
private_key     = $dir/wisun_root_ca_key.pem    # The private key
RANDFILE        = $dir/wisun_ca_rand            # private random number file

default_enddate = 99991231235959Z       # Wi-SUN certificates do not expire
copy_extensions = none                  # Don't copy extensions from request
name_opt        = ca_default            # Subject Name options
cert_opt        = ca_default            # Certificate field options
default_md      = default               # use public key default MD
preserve        = no                    # keep passed DN ordering
unique_subject  = no                    # Allow certificates with the same Subject Name

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy = policy_match

# For the CA policy
[ policy_match ]
commonName = supplied

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
commonName = supplied

####################################################################
[ req ]
# Section for distinguished_name
distinguished_name = req_distinguished_name
# Section for attributes
attributes = req_attributes
# Do not prompt attributes or distinguished name
prompt = no
# Do not encrypt private key
encrypt_key = no
# Interpret input fields as UTF8 strings
utf8 = yes
# Only permit UTF8Strings strings
string_mask = utf8only 

[ req_distinguished_name ]
commonName = Wi-SUN Demo CSR

[ req_attributes ]
# Empty

[ req_v3_device ]
subjectAltName = critical,otherName:1.3.6.1.5.5.7.8.4;SEQ:wisun_hardware_module_name_device

####################################################################
[ v3_device ]
# Extensions to add to a device certificate
keyUsage = critical,digitalSignature,keyAgreement
extendedKeyUsage = critical,1.3.6.1.4.1.45605.1,clientAuth
subjectAltName = critical,otherName:1.3.6.1.5.5.7.8.4;SEQ:wisun_hardware_module_name_device
authorityKeyIdentifier = keyid:always

[ v3_br ]
# Extensions to add to a server certificate
keyUsage = critical,digitalSignature,keyAgreement
extendedKeyUsage = critical,1.3.6.1.4.1.45605.1,serverAuth
subjectAltName = critical,otherName:1.3.6.1.5.5.7.8.4;SEQ:wisun_hardware_module_name_br
authorityKeyIdentifier = keyid:always

[ v3_root_ca ]
# Extensions to add to a root CA certificate
basicConstraints = critical,CA:true,pathlen:2
keyUsage = cRLSign,keyCertSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always

[ v3_ca1 ]
# Extensions to add to an intermediate CA certificate
basicConstraints = critical,CA:true,pathlen:1
keyUsage = cRLSign,keyCertSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always

[ v3_ca2 ]
# Extensions to add to an intermediate CA certificate
basicConstraints = critical,CA:true,pathlen:0
keyUsage = cRLSign,keyCertSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always

[ wisun_hardware_module_name_br ]
hwtype = OID:1.3.6.1.4.1.39873.1
hwserial = FORMAT:HEX,OCT:000B57FFFED8F34B

[ wisun_hardware_module_name_device ]
hwtype = OID:1.3.6.1.4.1.39873.2
hwserial = FORMAT:HEX,OCT:000D6FFFFE20C01C